Idea: Generic command execution
Given a starting directory, execute a command (which may have "parameters")
on a subset of the files "underneath" that directory.  One artifact of
this action is to create a plain text file that details each file acted upon.
(1) option: Recurse directories or not
(2) some sort of "parameter" object inside a "command" object
(2a) parameter object has "help" per parameter
(*) maybe also a list of "command examples"

<dependencies>
    <dependency>
        <groupId>com.seaglasslookandfeel</groupId>
        <artifactId>seaglasslookandfeel</artifactId>
        <version>0.2</version>
    </dependency>
</dependencies>

https://www.java.net/node/690816
If anyone is interested I tweaked the background using this technique. Basically I didn't want the hit of drawing the fancy vector based background as it was killing the processor on a low spec atom based pc. A simple fill is fine.
Enjoy


public class MyDesktopPane extends JDesktopPane {

    @Override
    public void updateUI() {
    if ("Nimbus".equals(UIManager.getLookAndFeel().getName())) {
    UIDefaults map = new UIDefaults();
    Painter painter = new Painter() {

    Color color = null;

    @Override
    public void paint(Graphics2D g, JComponent c, int w, int h) {
    g.setColor(color == null ? UIManager.getDefaults().getColor("desktop") : color);
    g.fillRect(0, 0, w, h);
    }
    };
    map.put("DesktopPane[Enabled].backgroundPainter", painter);
    putClientProperty("Nimbus.Overrides", map);
    }
    super.updateUI();
    }

}

-------- type or cut/paste the following into beanshell ------------------
import org.jwellman.virtualdesktop.*;
import com.xeiam.xchart.*;

double[] xData = new double[] { 0.0, 1.0, 2.0 };
double[] yData = new double[] { 2.0, 1.0, 0.0 };

// Create Chart
Chart chart = QuickChart.getChart("Sample Chart", "X", "Y", "y(x)", xData, yData);

// Show it
JPanel p = new XChartPanel(chart);

App app = org.jwellman.virtualdesktop.App.getVSystem();
app.createVApp(p, "any title u want");

SwingWrapper chartframe = new SwingWrapper(chart).displayChart();

// Attempt to dispose(instead of system exit)
chartframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

-------------------------------

For beanshell to have access to jvd:
import org.jwellman.virtualdesktop.*;
App app = org.jwellman.virtualdesktop.App.getVSystem();

-------------------------------

clear();

import com.xeiam.xchart.BitmapEncoder;
import com.xeiam.xchart.Chart;
import com.xeiam.xchart.QuickChart;
import com.xeiam.xchart.SwingWrapper;

// Create Chart
Chart chart = new ChartBuilder().chartType(ChartType.Area).width(800).height(600).title("AreaChart01").xAxisTitle("X").yAxisTitle("Y").build();
chart.addSeries("a", new double[] { 0, 3, 5, 7, 9 }, new double[] { -3, 5, 9, 6, 5 });
chart.addSeries("b", new double[] { 0, 2, 4, 6, 9 }, new double[] { -1, 6, 4, 0, 4 });
chart.addSeries("c", new double[] { 0, 1, 3, 8, 9 }, new double[] { -2, -1, 1, 0, 1 });

// Customize Chart
chart.getStyleManager().setLegendPosition(LegendPosition.InsideNW);
chart.getStyleManager().setAxisTitlesVisible(false);

new SwingWrapper(chart).displayChart();

----------------use editor() from the beanshell command line, then click 'eval'------------------------------
http://www.beanshell.org/manual/bshcommands.html
source("/src/main/resources/jvdDesktop.bsh");
source("/src/main/resources/jvdClassBrowser.bsh");
browser.driveToClass("org.jwellman.virtualdesktop.DesktopScrollPane");
jvd.browser.driveToClass("org.jwellman.virtualdesktop.DesktopScrollPane");

=================================
"jar:file:C:\dev\workspaces\git\VirtualDesktop\target\icons\Default.jar!"
"jar:file:\\dev\workspaces\git\VirtualDesktop\target\icons\Default.jar!\theme"

"jar:file:C:\dev\workspaces\git\VirtualDesktop\target\icons\Default.jar!\theme"       before
"jar:file:/C:/dev/workspaces/git/VirtualDesktop/target/icons/Default.jar!/theme"      after

"jar:file:C:\dev\workspaces\git\VirtualDesktop\target\icons\Default.jar!\main-default.png"     before
"jar:file:/C:/dev/workspaces/git/VirtualDesktop/target/icons/Default.jar!/main-default.png"    after

"jar:file:C:\dev\workspaces\git\VirtualDesktop\target\fm.jar!\manual.html"
"jar:file:/C:/dev/workspaces/git/VirtualDesktop/target/fm.jar!/manual.html"

detailsoption
"$NAME#200#$SIZE#75#$MIME#120#$DATE#200"

mvn install:install-file -Dfile=org.jzy3d-0.9.jar -DgroupId=org.jzy3d -DartifactId=jzy3d-api -Dversion=0.9 -Dpackaging=jar


-------- when virtual desktop starts: ---------
class org.jwellman.virtualdesktop.App$NoExitSecurityManager
class javax.swing.JFrame
class org.jwellman.virtualdesktop.App
class org.jwellman.virtualdesktop.App
class org.jwellman.virtualdesktop.App$2
class java.awt.event.InvocationEvent
class java.awt.EventQueue
class java.awt.EventQueue
class java.awt.EventQueue$3
class java.awt.EventQueue$3
class java.security.ProtectionDomain$1
class java.awt.EventQueue
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread

-------- when a JFrame is created and setDefaultCloseOperation() is called: ---------
class org.jwellman.virtualdesktop.App$NoExitSecurityManager
class javax.swing.JFrame
class com.xeiam.xchart.SwingWrapper$1
class java.awt.event.InvocationEvent
class java.awt.EventQueue
class java.awt.EventQueue
class java.awt.EventQueue$3
class java.awt.EventQueue$3
class java.security.ProtectionDomain$1
class java.awt.EventQueue
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread

-------- when a JFrame is closed: ---------
class org.jwellman.virtualdesktop.App$NoExitSecurityManager
class java.lang.Runtime
class java.lang.System
class javax.swing.JFrame
class java.awt.Window
class java.awt.Component
class java.awt.Container
class java.awt.Window
class java.awt.Component
class java.awt.EventQueue
class java.awt.EventQueue
class java.awt.EventQueue$3
class java.awt.EventQueue$3
class java.security.ProtectionDomain$1
class java.security.ProtectionDomain$1
class java.awt.EventQueue$4
class java.awt.EventQueue$4
class java.security.ProtectionDomain$1
class java.awt.EventQueue
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread
class java.awt.EventDispatchThread

DISPOSE_ON_CLOSE

--------------------------------------------------------------------------

-----------------------------
From HSQL Database Manager
-----------------------------
CREATE TABLE users (
  oid INTEGER PRIMARY KEY,
  lastname VARCHAR(20)
)

INSERT INTO users VALUES 1, 'Wellman'
INSERT INTO users VALUES 10, 'Zwiener'

SELECT * FROM users

jdbc:hsqldb:hsql://localhost:1234/sandbox
------------------

var jcx = new org.jwellman.jcx.ProcessBuilderExample(); jcx.exec("git");

---------------------------------------------------


print ( this.namespace.getMethods() );
