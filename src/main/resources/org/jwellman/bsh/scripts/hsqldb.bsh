import org.hsqldb.Server;

import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.ResultSet;
import java.sql.Statement;  

hsql() {

    // This is no longer necessary since using SpecHyperSql but is kept for reference
    startServer() {        
        Class.forName("org.hsqldb.jdbc.JDBCDriver");
        this.server = new Server();
        server.setAddress("localhost");
        server.setDatabaseName(0, "sandbox");
        server.setDatabasePath(0, "file:C:/data/hsqldb/sandbox");
        server.setPort(1234);
        server.setTrace(true);
        server.setLogWriter(new PrintWriter(System.out));
        server.start();

        // This is the proper way to shutdown the server from code:
        // x.server.shutdownWithCatalogs(org.hsqldb.Database.CLOSEMODE_COMPACT);
        
        // 1 = running, 4 = starting, 8 = stopping, 16 = shutdown
        // print(x.server.getState());

    }

    createConnection() {
        Connection con = null;
          
          try {
             //Registering the HSQLDB JDBC driver
             Class.forName("org.hsqldb.jdbc.JDBCDriver");
             //Creating the connection with HSQLDB
             con = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost:1234/sandbox", "SA", "");
             if (con!= null){
                System.out.println("Connection created successfully");                
             }else{
                System.out.println("Problem with creating connection");
             }

          }  catch (Exception e) {
             e.printStackTrace(System.out);
          }

          return con;
    }

    insert(String query) {
          int result = 0; 
          try { 
             Statement stmt = this.conn.createStatement(); 
             result = stmt.executeUpdate(query); 
             this.conn.commit(); 

              System.out.println(result+" rows effected"); 
              System.out.println("Rows inserted successfully");         
          } catch (Exception e) { 
             e.printStackTrace(System.out); 
          } 
    }

    select(String query) {
        ResultSet result = null;
        try {
             Statement stmt = this.conn.createStatement(); 
             result = stmt.executeQuery(query); 

          } catch (Exception e) {
             e.printStackTrace(System.out);
          }

          return result;
      }
    
    return this;
}

hsql = hsql();
// hsql.conn = hsql.createConnection();

// hsql.insert("INSERT INTO PUBLIC.DRIVELOG ( DRIVE, FREESPACE, DATECREATED ) VALUES ( 'C', 103.5,  CURRENT_TIMESTAMP )");

// z = hsql.select("SELECT * FROM PUBLIC.DRIVELOG ORDER BY DATECREATED");

//xchart = xchart();
//xchart.chart = xchart.createChart(z, "DATECREATED", "FREESPACE");
//xchart.jpanel = new XChartPanel(xchart.chart);
//x.addDockable( "Drive Space 10/29", xchart.jpanel );

// // or....
//while ( z.next() ) {
//            System.out.println(z.getBigDecimal("FREESPACE") 
//          + " | " + z.getDate("DATECREATED")
////          +" | "+ z.getString("author")
//    );
//}




