//    -------------------
//    JFreeChart
//
//    Before you create the chart from ChartFactory you can set the chart theme:
//    
//    ChartFactory.setChartTheme(StandardChartTheme.createLegacyTheme());
//    The default is the JFreeTheme which adds the gradient. The following themes are available:
//    
//    ChartFactory.setChartTheme(StandardChartTheme.createJFreeTheme());
//    ChartFactory.setChartTheme(StandardChartTheme.createDarknessTheme());
//    -------------------

// -------------------
import org.jwellman.virtualdesktop.*;
import org.jwellman.jfreechart.*;
import org.jwellman.jpreechart.*;

import org.jfree.chart.*;
import org.jfree.chart.demo.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.renderer.xy.*;
import org.jfree.chart.renderer.xy.*;
import org.jfree.data.category.*;


demoTimeSeriesChart()  {
    Color transparent = new Color(255, 255, 255, 0);
    GradientPaint grpCyan = new GradientPaint( 0.0f, 0.0f, Color.cyan, 10.0f, 10.0f, Color.darkGray );

    TimeSeriesTest test = new TimeSeriesTest();
    ChartPanel panel = new ChartPanel(test.chart);
    DesktopManager.get().createVApp(panel, "Time Series Test");

    XYPlot plot = test.chart.plot;
    plot.setBackgroundPaint( Color.black );
    plot.setBackgroundPaint( transparent );
    plot.setOutlineVisible(false);
    plot.setDomainGridlinesVisible(false);

    test.chart.getLegend().setBorder(0, 0, 0, 0);
    test.chart.getLegend().setBackgroundPaint(transparent);
    // ---------------------------------
    plot.setBackgroundPaint( Color.darkGray );
    test.chart.setBackgroundPaint( Color.darkGray );
    plot.getRangeAxis().setVisible(true);
    plot.getRangeAxis().setTickMarksVisible(true);
    plot.getRangeAxis().setTickMarksVisible(false);
    plot.getRangeAxis().setAxisLineVisible(true);
    plot.getRangeAxis().setAxisLineVisible(false);
    plot.getRangeAxis().setTickMarksVisible(false);
    plot.getDomainAxis().setAxisLineVisible(false);
    plot.getDomainAxis().setAxisLineVisible(false);
    plot.getDomainAxis().setTickMarkPaint(Color.lightGray);
    plot.getDomainAxis().setTickLabelPaint(Color.lightGray);
    plot.getDomainAxis().setLabelPaint(Color.lightGray);
    test.chart.getTitle().setPaint(Color.lightGray);
    test.chart.getLegend().setItemPaint(Color.lightGray);

    test.setChartTextColor(Color.lightGray);

    plot.setRenderer( new XYSplineRenderer(20, XYSplineRenderer$FillType.TO_ZERO) );

    print("demoTimeSeriesChart has been defined");
    return this;
}

mypreechart = demoTimeSeriesChart();
// The following two lines are optional - just decorates with JPreeChart
JPreeChart pre = new JPreeChart();
// pre.decorate(mypreechart.panel.getChart());


//piechart() {
//    demo = PieChartDemo1.createDemoPanel();
//    
//    pre = new JPreeChart();
//
//    p = plot = demo.getChart().getPlot();
//    p.setLabelBackgroundPaint(null);
//    p.setOutlineVisible(false);
//    p.setDrawingSupplier(pre.createDrawingSupplier());
//    
//    
//    DesktopManager.get().createVApp(demo, "Pie Chart 3");
//    print("pie chart has been defined");
//    return this;
//}
//
//piechart = piechart();


// this works (but throws an ignorable exception)
//piechart.pre.setFontName("Segoe UI");
//piechart.pre.decorate(piechart.demo.getChart());

//Color[] paintseq = {
//        Color.decode("#CD4E3C"), // red
//        Color.decode("#579340"), // green
//        Color.decode("#5582A6"), // blue
//        Color.decode("#CA4FCC"), // magenta
//        Color.decode("#7D6EC7"), // purple
//        Color.decode("#A87829")  // brown
//    };

//piechart.plot.setSectionPaint(null);
piechart.plot.setSectionPaint( 0, paintseq[0] );
piechart.plot.setSectionPaint( 1, paintseq[1] );
piechart.plot.setSectionPaint( 2, paintseq[2] );
piechart.plot.setSectionPaint( 3, paintseq[3] );

// -------- Apply JPreeChart to the JFreeChartDemo
//import org.jwellman.jpreechart.*;

demoJFreeChart() {
    JFreeChartDemo demo = JFreeChartDemo.createMainUI(null);

    DesktopManager.get().createVApp(demo.getPanel(), "JPreeChart");

    JPreeChart pre = new JPreeChart();
    pre.decorate(demo.getChart());

    print("demoJFreeChart has been defined");
    return this;
}

myjfreechart = demoJFreeChart();

// ----------- Change fonts
// myjfreechart.pre.setFontName("Segoe UI");
// myjfreechart.pre.decorate(myjfreechart.demo.getChart());

// ----------- Change title
// myjfreechart.demo.getChart().setTitle("Drive Space");

// --------------------- barchart
////import org.jfree.data.category.*;
////
//barchart() {
//
//    init() {
//
//        JFreeChart chart = createChart(createCarDataset());
//        chart.setTitle("Bar chart");
//
//        chartPanel = new ChartPanel(chart);
//        chartPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
//
//
//
//        DesktopManager.get().createVApp(chartPanel, "Bar Chart");
//
//        return chart;
//    }
//
//    createCarDataset( ) {
//      final String fiat = "FIAT";        
//      final String audi = "AUDI";        
//      final String ford = "FORD";        
//      final String speed = "Speed";        
//      final String millage = "Mileage";        
//      final String userrating = "User Rating";        
//      final String safety = "Safety";        
//
//      final DefaultCategoryDataset dataset = new DefaultCategoryDataset( );  
//
//      dataset.addValue( 1.0 , fiat , speed );        
//      dataset.addValue( 3.0 , fiat , userrating );        
//      dataset.addValue( 5.0 , fiat , millage ); 
//      dataset.addValue( 5.0 , fiat , safety );           
//
//      dataset.addValue( 5.0 , audi , speed );        
//      dataset.addValue( 6.0 , audi , userrating );       
//      dataset.addValue( 10.0 , audi , millage );        
//      dataset.addValue( 4.0 , audi , safety );
//
//      dataset.addValue( 4.0 , ford , speed );        
//      dataset.addValue( 2.0 , ford , userrating );        
//      dataset.addValue( 3.0 , ford , millage );        
//      dataset.addValue( 6.0 , ford , safety );               
//
//      return dataset; 
//   }
//   
//    createDataset() {
//
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        dataset.setValue(46, "Gold medals", "USA");
//        dataset.setValue(38, "Gold medals", "China");
//        dataset.setValue(29, "Gold medals", "UK");
//        dataset.setValue(22, "Gold medals", "Russia");
//        dataset.setValue(13, "Gold medals", "South Korea");
//        dataset.setValue(11, "Gold medals", "Germany");
//
//        return dataset;
//    }
//
//    createChart(CategoryDataset dataset) {
//
//        JFreeChart barChart = ChartFactory.createBarChart(
//                "Olympic gold medals in London",
//                "",
//                "Gold medals",
//                dataset,
//                PlotOrientation.VERTICAL,
//                false, true, false);
//
//        return barChart;
//    }
//
//    return this;
//}
//
//barchart = barchart();
//barchart.chart = barchart.init();

//pre = new JPreeChart();
//pre.decorate(barchart.chart);

//pre.setFontName("Segoe UI");
//pre.decorate(barchart.chart);

//r = barchart.chart.getCategoryPlot().getRenderer();
//r.setSeriesPaint(0, paintseq[0]);
//r.setSeriesPaint(1, paintseq[1]);
//r.setSeriesPaint(2, paintseq[2]);

//barchart.plot = barchart.chart.getPlot();
//barchart.plot.setBackgroundPaint(Color.lightGray);
//barchart.plot.setRangeGridlinePaint(Color.white);
//import org.jfree.chart.renderer.category.*;

//barchart.renderer = barchart.plot.getRenderer();
//barchart.renderer.setBarPainter(new StandardBarPainter());
//barchart.renderer.setItemMargin(0.03);

//barchart.chart.setBackgroundPaint(new Color(255,255,255,0));

//axis = barchart.plot.getDomainAxis();
//axis.setLabel("Categories");

//axis = barchart.plot.getRangeAxis();
//axis.setLabel("Score");






























