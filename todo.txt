
todo: bsh/jpad command and/or vapp that quickly turns bsh scripts to vapps
the vapp could display a list of files in the correct directory
better would be to use filebrowser widget with drag/drop onto "vapp creator" vapp :)

todo: vapp that displays all icons in an iconfont (in a jlist would probably be easiest)
again, drag/drop might be pretty cool to select .ttf
feature:  allow jlist items to be dragged (requires subclass defaultlistcellrenderer)



todo: right-click context menu for app list
    todo: move app between jframe and jinternalframe
    todo: improve jlist presentation using new rixlist

todo: add jiconfont to application




GPL   :: Missing artifact com.mgarin:weblaf:jar:1.27	pom.xml	/VirtualDesktop	line 375	Maven Dependency Problem


BSD   :: Missing artifact net.sourceforge.napkinlaf:napkinlaf:jar:1.2	pom.xml	/VirtualDesktop	line 369	Maven Dependency Problem
      http://napkinlaf.sourceforge.net/      
      https://sourceforge.net/projects/napkinlaf/
      https://repo1.maven.org/maven2/net/sf/squirrel-sql/thirdparty-non-maven/napkinlaf/1.2/
      
AP2   :: Missing artifact nl.knaw.dans.common:dans-dbf-lib:jar:1.0.0-beta-10	pom.xml	/VirtualDesktop	line 466	Maven Dependency Problem
      http://dans-dbf-lib.sourceforge.net/
      https://dans.knaw.nl/en
      https://github.com/DANS-KNAW/dans-dbf-lib
      https://sourceforge.net/projects/dans-dbf-lib/files/
      
???   :: Missing artifact org.codehaus.groovy-contrib:graphicsbuilder:jar:0.6.1	pom.xml	/VirtualDesktop	line 135	Maven Dependency Problem
      this is very old and I cannot even find it on the internet; pull copy from local repo
      
LGPL  :: Missing artifact org.dockingframes:docking-frames-common:jar:1.1.3	pom.xml	/VirtualDesktop	line 208	Maven Dependency Problem
LGPL  :: Missing artifact org.dockingframes:docking-frames-core:jar:1.1.3	pom.xml	/VirtualDesktop	line 200	Maven Dependency Problem
      http://www.docking-frames.org/download.html
      https://github.com/Benoker/DockingFrames
      v1.1.3 is not available on maven central (https://mvnrepository.com/) - only up to 1.1.2p6
      
LGPL3 :: Missing artifact org.jetbrains.jediterm:jediterm-pty:jar:2.33	pom.xml	/VirtualDesktop	line 235	Maven Dependency Problem
      https://github.com/JetBrains/jediterm
      
EPL10 :: Missing artifact org.jetbrains.pty4j:pty4j:jar:0.8.2	pom.xml	/VirtualDesktop	line 263	Maven Dependency Problem
      https://github.com/JetBrains/pty4j
      https://mvnrepository.com/artifact/org.jetbrains.pty4j/pty4j/0.8.2
      
Missing artifact org.jwellman:swing-utils:jar:0.0.1-SNAPSHOT	pom.xml	/VirtualDesktop	line 114	Maven Dependency Problem

Missing artifact org.kordamp:jsilhouette:jar:0.2	pom.xml	/VirtualDesktop	line 143	Maven Dependency Problem
      https://kordamp.org/jsilhouette/
      https://github.com/kordamp/jsilhouette
      https://bintray.com/aalmiray/kordamp/jsilhouette/_latestVersion

The container 'Maven Dependencies' references non existing library 'C:\Users\rwellman_sta\.m2\repository\org\jwellman\swing-utils\0.0.1-SNAPSHOT\swing-utils-0.0.1-SNAPSHOT.jar'	VirtualDesktop		Build path	Build Path Problem
The project cannot be built until build path errors are resolved	VirtualDesktop		Unknown	Java Problem


there appears to be "newer" JScrollableDesktopPane at https://github.com/hussachai/hswing/blob/master/src/main/java/org/jscroll/JScrollDesktopPane.java
I do not know if it is "better" or even modified from the version that I currently have.
More research required.

todo: 12/9/2019: use/incorporate this groovy swingbuilder presentation
https://www.oracle.com/technetwork/systems/ts-5098-1-159011.pdf
https://web.archive.org/web/20140702234519/http://groovy.codehaus.org/Alphabetical+Widgets+List
see this page for doOutside and doLater:
https://uberconf.com/blog/andres_almiray/2009/11/building_rich_swing_applications_with_groovy__part_i

# groovy swingbuilder references
Legend: * = simplest/reference, ** = tutorial, *** = useful, **** = real world/advanced, ***** = best of breed/you won't find this elsewhere

***** https://www.oracle.com/technetwork/systems/ts-5098-1-159011.pdf
****  https://uberconf.com/blog/andres_almiray/2009/11/building_rich_swing_applications_with_groovy__part_i
****  https://dracodoc.wordpress.com/tag/swingbuilder/
****  https://dracodoc.wordpress.com/2014/06/24/pdf4eink-convert-text-files-into-pdf-for-optimal-eink-reader-reading-experience/
****  https://nofluffjuststuff.com/blog/kenneth_kousen/2013/07/a_groovy_chuck_norris_script
***   https://www.cs.wcupa.edu/rkline/groovy/gui.html
***   https://kousenit.org/2008/09/29/making-swing-groovy-part-i/
***   https://kousenit.org/2008/10/03/making-swing-groovy-part-ii-binding/
***   https://kousenit.org/2008/10/13/making-swing-groovy-part-iii-edt/
**    https://www.tutorialspoint.com/groovy/groovy_builders.htm
**    https://dzone.com/articles/swinging-groovy-fun
**    https://alvinalexander.com/java/jwarehouse/groovy/src/examples/groovy/swing/TableLayoutDemo.groovy.shtml
**    https://alvinalexander.com/java/jwarehouse/groovy/src/examples/groovy/swing
*     https://web.archive.org/web/20140702234519/http://groovy.codehaus.org/Alphabetical+Widgets+List



todo: 12/9/2019: Use groovy classes in project
https://github.com/groovy/groovy-eclipse/wiki/Groovy-Eclipse-Maven-plugin

todo: JInternalFrame with menu

done: ? - 12/9/2019: create a tree of opened vapps;
      possibly override minimized apps to not display and
      rely on the tree to restore
      Current implementation is a JList

done: integrate desktop icons (from proof of concept)

todo: possibly allow "sub-applications" to contribute to the desktop menubar/menus;
      if so, it might be wise/desirable to decorate either the standard menu items
      or the added menu items so that the user can differentiate which is which.
      12/9/2019: I honestly don't know if I will ever make this a priority;
      it might be neat as a proof of concept but it's not really a priority to me
      
todo: create a class and/or framework jar as demo for how to write a simple app
      i.e. do not extend JFrame 

To write "portable" java apps:
* Do not use a look and feel
* Do not use your own container; i.e. JFrame or JInternalFrame (and JDialog)
* Rather... use JPanel for EVERYTHING (let the framework put your JPanel in the appropriate container)
* Do not call System.exit() directly !!! (let the framework handle this request)
* Do not use modal dialogs directly; use a portable interface.
* If your app is somehow specific to an OS, then
  all such behavior must check for that OS before trying to run.  
  Either throw an exception or call to the abstract dialog interface.
